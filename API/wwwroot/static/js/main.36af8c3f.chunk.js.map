{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/ProfileStore.ts","app/stores/UserStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modelStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceHolder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInputs.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/form/MyDateInput.tsx","app/common/options/categoryOptions.ts","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetaledHeader.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginationResult","data","pagination","this","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","toast","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","userName","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPrediacte","value","resetPrediacte","forEach","loadActivities","axiosParams","result","setActivity","setPagination","setLoadingInitial","console","log","loadActivity","getActivity","runInAction","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","state","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttenddeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","loadUserActivities","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","uploaded","setUploaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","err","on","comment","createdAt","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","exact","to","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","calendarType","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","circular","bordered","ActivityListItem","Segment","Group","Label","textAlign","marginBottom","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceHolder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalItems","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","event","setValue","onBlur","setTouched","MyDateInput","selected","categoryOptions","useHistory","useParams","nullable","subheader","uuid","handleFormSubmit","enableReinitialize","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","resetForm","onKeyPress","shiftKey","verticalAlign","relaxed","divided","ribbon","Extra","activityImageStyle","activityImageTextStyle","bottom","left","height","zIndex","top","padding","TestErrors","widths","baseUrl","primary","NotFound","Inline","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","styles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setPhotoMode","target","setTarget","itemsPerRow","currentTarget","handleMainPhoto","handleDeletePhoto","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","menuPosition","Statistic","Divider","PrivateRoute","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.36af8c3f.chunk.js","sourcesContent":["export interface Pagination {\r\n\tcurrentPage: number;\r\n\titemsPerPage: number;\r\n\ttotalItems: number;\r\n\ttotalPages: number;\r\n}\r\n\r\nexport class PaginationResult<T> {\r\n\tdata: T;\r\n\tpagination: Pagination;\r\n\r\n\tconstructor(data: T, pagination: Pagination) {\r\n\t\tthis.data = data;\r\n\t\tthis.pagination = pagination;\r\n\t}\r\n}\r\n\r\nexport class PagingParams {\r\n\tpageNumber = 1;\r\n\tpageSize;\r\n\tconstructor(pageNumber = 0, pageSize = 2) {\r\n\t\tthis.pageNumber = pageNumber;\r\n\t\tthis.pageSize = pageSize;\r\n\t}\r\n}\r\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { PaginationResult } from \"../models/pagination\";\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"../stores/store\";\n\nconst sleep = (delay: number) => {\n\treturn new Promise((resolve) => {\n\t\tsetTimeout(resolve, delay);\n\t});\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.request.use((config) => {\n\tconst token = store.commonStore.token;\n\tif (token) config.headers.Authorization = `Bearer ${token}`;\n\treturn config;\n});\n\naxios.interceptors.response.use(\n\tasync (response) => {\n\t\tif (process.env.NODE_ENV === \"development\") await sleep(1000);\n\t\tconst pagination = response.headers[\"pagination\"];\n\t\tif (pagination) {\n\t\t\tresponse.data = new PaginationResult(\n\t\t\t\tresponse.data,\n\t\t\t\tJSON.parse(pagination),\n\t\t\t);\n\t\t\treturn response as AxiosResponse<PaginationResult<any>>;\n\t\t}\n\t\treturn response;\n\t},\n\t(error: AxiosError) => {\n\t\tconst { data, status, config } = error.response!;\n\t\tswitch (status) {\n\t\t\tcase 400:\n\t\t\t\tif (config.method === \"get\" && data.errors.hasOwnProperty(\"id\")) {\n\t\t\t\t\thistory.push(\"/not-found\");\n\t\t\t\t}\n\t\t\t\tif (data.errors) {\n\t\t\t\t\tconst modalStateErrors = [];\n\t\t\t\t\tfor (const key in data.errors) {\n\t\t\t\t\t\tif (data.errors[key]) {\n\t\t\t\t\t\t\tmodalStateErrors.push(data.errors[key]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthrow modalStateErrors.flat();\n\t\t\t\t} else {\n\t\t\t\t\ttoast.error(data);\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 401:\n\t\t\t\ttoast.error(\"unauthorised\");\n\t\t\t\tbreak;\n\t\t\tcase 404:\n\t\t\t\thistory.push(\"/not-found\");\n\t\t\t\tbreak;\n\t\t\tcase 500:\n\t\t\t\tstore.commonStore.setServerError(data);\n\t\t\t\thistory.push(\"/server-error\");\n\t\t\t\tbreak;\n\t\t}\n\t\treturn Promise.reject(error);\n\t},\n);\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n\tget: <T>(url: string) => axios.get<T>(url).then(responseBody),\n\tpost: <T>(url: string, body: {}) =>\n\t\taxios.post<T>(url, body).then(responseBody),\n\tput: <T>(url: string, body: {}) => axios.put<T>(url, body).then(responseBody),\n\tdel: <T>(url: string) => axios.delete<T>(url).then(responseBody),\n};\n\nconst Activities = {\n\tlist: (params: URLSearchParams) =>\n\t\taxios\n\t\t\t.get<PaginationResult<Activity[]>>(\"/activities\", { params })\n\t\t\t.then(responseBody),\n\tdetails: (id: string) => requests.get<Activity>(`/activities/${id}`),\n\tcreate: (activity: ActivityFormValues) =>\n\t\trequests.post<void>(\"/activities\", activity),\n\tupdate: (activity: ActivityFormValues) =>\n\t\trequests.put<void>(`/activities/${activity.id}`, activity),\n\tdelete: (id: string) => requests.del<void>(`/activities/${id}`),\n\tattend: (id: string) => requests.post<void>(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n\tcurrent: () => requests.get<User>(\"/account\"),\n\tlogin: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n\tregister: (user: UserFormValues) =>\n\t\trequests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n\tget: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n\tuploadPhoto: (file: Blob) => {\n\t\tlet formData = new FormData();\n\t\tformData.append(\"File\", file);\n\t\treturn axios.post<Photo>(\"photo\", formData, {\n\t\t\theaders: { \"Content-type\": \"multipart/form-data\" },\n\t\t});\n\t},\n\tsetMainPhoto: (id: string) => requests.post(`/photo/${id}/setMain`, {}),\n\tdeletePhoto: (id: string) => requests.del(`/photo/${id}`),\n\tupdateProfile: (profile: Partial<Profile>) =>\n\t\trequests.put(`/profiles`, profile),\n\tupdateFollowing: (username: string) =>\n\t\trequests.post(`/follow/${username}`, {}),\n\tlistFollowings: (username: string, predicate: string) =>\n\t\trequests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n\tlistActivities: (username: string, predicate: string) =>\n\t\trequests.get<UserActivity[]>(\n\t\t\t`/profiles/${username}/activities?predicate=${predicate}`,\n\t\t),\n};\n\nconst agent = {\n\tActivities,\n\tAccount,\n\tProfiles,\n};\n\nexport default agent;\n","import { Profile } from \"./profile\";\n\nexport interface Activity {\n\tid: string;\n\ttitle: string;\n\tdate: Date | null;\n\tdescription: string;\n\tcategory: string;\n\tcity: string;\n\tvenue: string;\n\thostUsername: string;\n\tisCancelled: boolean;\n\tisGoing: boolean;\n\tisHost: boolean;\n\thost?: Profile;\n\tattendees: Profile[];\n}\n\nexport class Activity implements Activity {\n\tconstructor(init?: ActivityFormValues) {\n\t\tObject.assign(this, init);\n\t}\n}\n\nexport class ActivityFormValues {\n\tid?: string = undefined;\n\ttitle: string = \"\";\n\tcategory: string = \"\";\n\tdescription: string = \"\";\n\tdate: Date | null = null;\n\tcity: string = \"\";\n\tvenue: string = \"\";\n\n\tconstructor(activity?: ActivityFormValues) {\n\t\tif (activity) {\n\t\t\tthis.id = activity.id;\n\t\t\tthis.title = activity.title;\n\t\t\tthis.category = activity.category;\n\t\t\tthis.description = activity.description;\n\t\t\tthis.date = activity.date;\n\t\t\tthis.city = activity.city;\n\t\t\tthis.venue = activity.venue;\n\t\t}\n\t}\n}\n","import { User } from \"./user\";\r\n\r\nexport interface Profile {\r\n\tuserName: string;\r\n\tdisplayName: string;\r\n\timage?: string;\r\n\tbio?: string;\r\n\tfollowersCount: number;\r\n\tfollowingCount: number;\r\n\tfollowing: boolean;\r\n\tphotos: Photo[];\r\n}\r\n\r\nexport class Profile implements Profile {\r\n\tconstructor(user: User) {\r\n\t\tthis.userName = user.username;\r\n\t\tthis.displayName = user.displayName;\r\n\t\tthis.image = user.image;\r\n\t}\r\n}\r\nexport interface Photo {\r\n\tid: string;\r\n\turl: string;\r\n\tisMain: boolean;\r\n}\r\nexport interface UserActivity {\r\n\tid:string;\r\n\ttitle:string;\r\n\tcategory:string;\r\n\tdate:Date;\r\n}","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Activity, ActivityFormValues } from \"../models/activity\";\nimport { format } from \"date-fns\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/profile\";\nimport { Pagination, PagingParams } from \"../models/pagination\";\n\nexport default class ActivityStore {\n\tactivityRegistry = new Map<string, Activity>();\n\tselectedActivity: Activity | undefined = undefined;\n\teditMode = false;\n\tloading = false;\n\tloadingInitial = false;\n\tpagination: Pagination | null = null;\n\tpagingParams = new PagingParams();\n\tpredicate = new Map().set(\"all\", true);\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\t\treaction(\n\t\t\t() => this.predicate.keys(),\n\t\t\t() => {\n\t\t\t\tthis.pagingParams = new PagingParams();\n\t\t\t\tthis.activityRegistry.clear();\n\t\t\t\tthis.loadActivities();\n\t\t\t},\n\t\t);\n\t}\n\n\tsetPagingParams = (pagingParams: PagingParams) => {\n\t\tthis.pagingParams = pagingParams;\n\t};\n\n\tsetPrediacte = (predicate: string, value: string | Date) => {\n\t\tconst resetPrediacte = () => {\n\t\t\tthis.predicate.forEach((value, key) => {\n\t\t\t\tif (key !== \"startDate\") this.predicate.delete(key);\n\t\t\t});\n\t\t};\n\t\tswitch (predicate) {\n\t\t\tcase \"all\":\n\t\t\t\tresetPrediacte();\n\t\t\t\tthis.predicate.set(\"all\", true);\n\t\t\t\tbreak;\n\t\t\tcase \"isGoing\":\n\t\t\t\tresetPrediacte();\n\t\t\t\tthis.predicate.set(\"isGoing\", true);\n\t\t\t\tbreak;\n\t\t\tcase \"isHost\":\n\t\t\t\tresetPrediacte();\n\t\t\t\tthis.predicate.set(\"isHost\", true);\n\t\t\t\tbreak;\n\t\t\tcase \"startDate\":\n\t\t\t\tthis.predicate.delete(\"startDate\");\n\t\t\t\tthis.predicate.set(\"startDate\", value);\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tget axiosParams() {\n\t\tconst params = new URLSearchParams();\n\t\tparams.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n\t\tparams.append(\"pageSize\", this.pagingParams.pageSize.toString());\n\t\tthis.predicate.forEach((value, key) => {\n\t\t\tif (key === \"startDate\") {\n\t\t\t\tparams.append(key, (value as Date).toISOString());\n\t\t\t} else {\n\t\t\t\tparams.append(key, value);\n\t\t\t}\n\t\t});\n\t\treturn params;\n\t}\n\n\tget activitiesByDate() {\n\t\treturn Array.from(this.activityRegistry.values()).sort(\n\t\t\t(a, b) => a.date!.getTime() - b.date!.getTime(),\n\t\t);\n\t}\n\n\tget groupedActivities() {\n\t\treturn Object.entries(\n\t\t\tthis.activitiesByDate.reduce((activities, activity) => {\n\t\t\t\tconst date = format(activity.date!, \"dd MMM yyyy\");\n\t\t\t\tactivities[date] = activities[date]\n\t\t\t\t\t? [...activities[date], activity]\n\t\t\t\t\t: [activity];\n\t\t\t\treturn activities;\n\t\t\t}, {} as { [key: string]: Activity[] }),\n\t\t);\n\t}\n\n\tloadActivities = async () => {\n\t\tthis.loadingInitial = true;\n\t\ttry {\n\t\t\tconst result = await agent.Activities.list(this.axiosParams);\n\t\t\tresult.data.forEach((activity) => {\n\t\t\t\tthis.setActivity(activity);\n\t\t\t});\n\t\t\tthis.setPagination(result.pagination);\n\t\t\tthis.setLoadingInitial(false);\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\tthis.setLoadingInitial(false);\n\t\t}\n\t};\n\tsetPagination = (pagination: Pagination) => {\n\t\tthis.pagination = pagination;\n\t};\n\n\tloadActivity = async (id: string) => {\n\t\tlet activity = this.getActivity(id);\n\t\tif (activity) {\n\t\t\tthis.selectedActivity = activity;\n\t\t\treturn activity;\n\t\t} else {\n\t\t\tthis.loadingInitial = true;\n\t\t\ttry {\n\t\t\t\tactivity = await agent.Activities.details(id);\n\t\t\t\tthis.setActivity(activity);\n\t\t\t\trunInAction(() => {\n\t\t\t\t\tthis.selectedActivity = activity;\n\t\t\t\t});\n\t\t\t\tthis.setLoadingInitial(false);\n\t\t\t\treturn activity;\n\t\t\t} catch (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t\tthis.setLoadingInitial(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tprivate setActivity = (activity: Activity) => {\n\t\tconst user = store.userStore.user;\n\t\tif (user) {\n\t\t\tactivity.isGoing = activity.attendees!.some(\n\t\t\t\t(a) => a.displayName === user.displayName,\n\t\t\t);\n\t\t\tactivity.isHost = activity.hostUsername === user.username;\n\t\t\tactivity.host = activity.attendees?.find(\n\t\t\t\t(x) => x.userName === activity.hostUsername,\n\t\t\t);\n\t\t}\n\t\tactivity.date = new Date(activity.date!);\n\t\tthis.activityRegistry.set(activity.id, activity);\n\t};\n\n\tprivate getActivity = (id: string) => {\n\t\treturn this.activityRegistry.get(id);\n\t};\n\n\tsetLoadingInitial = (state: boolean) => {\n\t\tthis.loadingInitial = state;\n\t};\n\n\tcreateActivity = async (activity: ActivityFormValues) => {\n\t\tconst user = store.userStore.user;\n\t\tconst attendee = new Profile(user!);\n\t\ttry {\n\t\t\tawait agent.Activities.create(activity);\n\t\t\tconst newActivity = new Activity(activity);\n\t\t\tnewActivity.hostUsername = user!.username;\n\t\t\tnewActivity.attendees = [attendee];\n\t\t\tthis.setActivity(newActivity);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.selectedActivity = newActivity;\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tupdateActivity = async (activity: ActivityFormValues) => {\n\t\ttry {\n\t\t\tawait agent.Activities.update(activity);\n\t\t\trunInAction(() => {\n\t\t\t\tif (activity.id) {\n\t\t\t\t\tlet updatedActivity = {\n\t\t\t\t\t\t...this.getActivity(activity.id),\n\t\t\t\t\t\t...activity,\n\t\t\t\t\t};\n\t\t\t\t\tthis.activityRegistry.set(activity.id, updatedActivity as Activity);\n\t\t\t\t\tthis.selectedActivity = updatedActivity as Activity;\n\t\t\t\t}\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tdeleteActivity = async (id: string) => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Activities.delete(id);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.activityRegistry.delete(id);\n\t\t\t\tthis.loading = false;\n\t\t\t});\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t});\n\t\t}\n\t};\n\n\tupdateAttendance = async () => {\n\t\tconst user = store.userStore.user;\n\t\tthis.loading = true;\n\n\t\ttry {\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\n\t\t\trunInAction(() => {\n\t\t\t\tif (this.selectedActivity?.isGoing) {\n\t\t\t\t\tthis.selectedActivity.attendees =\n\t\t\t\t\t\tthis.selectedActivity.attendees?.filter(\n\t\t\t\t\t\t\t(a) => a.userName !== user?.username,\n\t\t\t\t\t\t);\n\t\t\t\t\tthis.selectedActivity.isGoing = false;\n\t\t\t\t} else {\n\t\t\t\t\tconst attendee = new Profile(user!);\n\t\t\t\t\tthis.selectedActivity?.attendees?.push(attendee);\n\t\t\t\t\tthis.selectedActivity!.isGoing = true;\n\t\t\t\t}\n\t\t\t\tthis.activityRegistry.set(\n\t\t\t\t\tthis.selectedActivity!.id,\n\t\t\t\t\tthis.selectedActivity!,\n\t\t\t\t);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\trunInAction(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t});\n\t\t}\n\t};\n\n\tcancelActivityToggle = async () => {\n\t\tthis.loading = true;\n\t\ttry {\n\t\t\tawait agent.Activities.attend(this.selectedActivity!.id);\n\t\t\trunInAction(() => {\n\t\t\t\tthis.selectedActivity!.isCancelled =\n\t\t\t\t\t!this.selectedActivity?.isCancelled;\n\t\t\t\tthis.activityRegistry.set(\n\t\t\t\t\tthis.selectedActivity!.id,\n\t\t\t\t\tthis.selectedActivity!,\n\t\t\t\t);\n\t\t\t});\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t} finally {\n\t\t\trunInAction(() => {\n\t\t\t\tthis.loading = false;\n\t\t\t});\n\t\t}\n\t};\n\tclearSelectedActivity = () => {\n\t\tthis.selectedActivity = undefined;\n\t};\n\n\tupdateAttenddeFollowing = (username: string) => {\n\t\tthis.activityRegistry.forEach((activity) => {\n\t\t\tactivity.attendees.forEach((attendee) => {\n\t\t\t\tif (attendee.userName === username)\n\t\t\t\t\tattendee.following\n\t\t\t\t\t\t? attendee.followersCount--\n\t\t\t\t\t\t: attendee.followersCount++;\n\t\t\t\tattendee.following = !attendee.following;\n\t\t\t});\n\t\t});\n\t};\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n\tprofile: Profile | null = null;\r\n\tloadingProfile = false;\r\n\tuploading = false;\r\n\tloading = false;\r\n\tfollowings: Profile[] = [];\r\n\tloadingFollowings = false;\r\n\tactiveTab = 0;\r\n\tuserActivities: UserActivity[] = [];\r\n\tloadingActivities = false;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\r\n\t\treaction(\r\n\t\t\t() => this.activeTab,\r\n\t\t\t(activeTab) => {\r\n\t\t\t\tif (activeTab === 3 || activeTab === 4) {\r\n\t\t\t\t\tconst predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n\t\t\t\t\tthis.loadFollowings(predicate);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.followings = [];\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t);\r\n\t}\r\n\tsetActiveTab = (activeTab: any) => {\r\n\t\tthis.activeTab = activeTab;\r\n\t};\r\n\r\n\tget isCurrentUser() {\r\n\t\tif (store.userStore.user && this.profile) {\r\n\t\t\treturn store.userStore.user.username === this.profile.userName;\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tloadProfile = async (username: string) => {\r\n\t\tthis.loadingProfile = true;\r\n\t\ttry {\r\n\t\t\tconst profile = await agent.Profiles.get(username);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.profile = profile;\r\n\t\t\t\tthis.loadingProfile = false;\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trunInAction(() => (this.loadingProfile = false));\r\n\t\t}\r\n\t};\r\n\r\n\tuploadPhoto = async (file: Blob) => {\r\n\t\tthis.uploading = true;\r\n\t\ttry {\r\n\t\t\tconst response = await agent.Profiles.uploadPhoto(file);\r\n\t\t\tconst photo = response.data;\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile) {\r\n\t\t\t\t\tthis.profile.photos?.push(photo);\r\n\t\t\t\t\tif (photo.isMain && store.userStore.user) {\r\n\t\t\t\t\t\tstore.userStore.setImage(photo.url);\r\n\t\t\t\t\t\tthis.profile.image = photo.url;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.uploading = false;\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trunInAction(() => (this.uploading = false));\r\n\t\t}\r\n\t};\r\n\tsetMainPhoto = async (photo: Photo) => {\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.setMainPhoto(photo.id);\r\n\t\t\tstore.userStore.setImage(photo.url);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile && this.profile.photos) {\r\n\t\t\t\t\tthis.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n\t\t\t\t\tthis.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n\t\t\t\t\tthis.profile.image = photo.url;\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trunInAction(() => (this.loading = false));\r\n\t\t}\r\n\t};\r\n\tdeletePhoto = async (photo: Photo) => {\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.deletePhoto(photo.id);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (this.profile) {\r\n\t\t\t\t\tthis.profile.photos = this.profile.photos.filter(\r\n\t\t\t\t\t\t(p) => p.id !== photo.id,\r\n\t\t\t\t\t);\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trunInAction(() => (this.loading = false));\r\n\t\t}\r\n\t};\r\n\tupdateProfile = async (profile: Partial<Profile>) => {\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.updateProfile(profile);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tprofile.displayName &&\r\n\t\t\t\t\tprofile.displayName !== store.userStore.user?.displayName\r\n\t\t\t\t) {\r\n\t\t\t\t\tstore.userStore.setDisplayName(profile.displayName);\r\n\t\t\t\t}\r\n\t\t\t\tthis.profile = { ...this.profile, ...(profile as Profile) };\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\trunInAction(() => (this.loading = false));\r\n\t\t}\r\n\t};\r\n\tupdateFollowing = async (username: string, following: boolean) => {\r\n\t\tthis.loading = true;\r\n\t\ttry {\r\n\t\t\tawait agent.Profiles.updateFollowing(username);\r\n\t\t\tstore.activityStore.updateAttenddeFollowing(username);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.profile &&\r\n\t\t\t\t\tthis.profile.userName !== store.userStore.user?.username &&\r\n\t\t\t\t\tthis.profile.userName === username\r\n\t\t\t\t) {\r\n\t\t\t\t\tfollowing\r\n\t\t\t\t\t\t? this.profile.followersCount++\r\n\t\t\t\t\t\t: this.profile.followersCount--;\r\n\t\t\t\t\tthis.profile.following = !this.profile.following;\r\n\t\t\t\t}\r\n\t\t\t\tif (\r\n\t\t\t\t\tthis.profile &&\r\n\t\t\t\t\tthis.profile.userName === store.userStore.user?.username\r\n\t\t\t\t) {\r\n\t\t\t\t\tfollowing\r\n\t\t\t\t\t\t? this.profile.followingCount--\r\n\t\t\t\t\t\t: this.profile.followingCount++;\r\n\t\t\t\t}\r\n\t\t\t\tthis.followings.forEach((profile) => {\r\n\t\t\t\t\tif (profile.userName === username) {\r\n\t\t\t\t\t\tprofile.following\r\n\t\t\t\t\t\t\t? profile.followersCount--\r\n\t\t\t\t\t\t\t: profile.followersCount++;\r\n\t\t\t\t\t\tprofile.following = !profile.following;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tthis.loading = false;\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\r\n\t\t\trunInAction(() => (this.loading = false));\r\n\t\t}\r\n\t};\r\n\tloadFollowings = async (predicate: string) => {\r\n\t\tthis.loadingFollowings = true;\r\n\t\ttry {\r\n\t\t\tconst following = await agent.Profiles.listFollowings(\r\n\t\t\t\tthis.profile!.userName,\r\n\t\t\t\tpredicate,\r\n\t\t\t);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.followings = following;\r\n\t\t\t\tthis.loadingFollowings = false;\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trunInAction(() => (this.loadingFollowings = false));\r\n\t\t}\r\n\t};\r\n\tloadUserActivities = async (username: string, predicate?: string) => {\r\n\t\tthis.loadingActivities = true;\r\n\t\ttry {\r\n\t\t\tconst activities = await agent.Profiles.listActivities(\r\n\t\t\t\tusername,\r\n\t\t\t\tpredicate!,\r\n\t\t\t);\r\n\t\t\trunInAction(() => {\r\n\t\t\t\tthis.userActivities = activities;\r\n\t\t\t\tthis.loadingActivities = false;\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t\trunInAction(() => (this.loadingActivities = false));\r\n\t\t}\r\n\t};\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore {\r\n\tuser: User | null = null;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\tget isLoggedIn() {\r\n\t\treturn !!this.user;\r\n\t}\r\n\tlogin = async (creds: UserFormValues) => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.login(creds);\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t\thistory.push(\"/activities\");\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\tlogout = () => {\r\n\t\tstore.commonStore.setToken(null);\r\n\t\twindow.localStorage.removeItem(\"jwt\");\r\n\t\tthis.user = null;\r\n\t\thistory.push(\"/\");\r\n\t};\r\n\r\n\tgetUser = async () => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.current();\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n\r\n\tregister = async (creds: UserFormValues) => {\r\n\t\ttry {\r\n\t\t\tconst user = await agent.Account.register(creds);\r\n\t\t\tstore.commonStore.setToken(user.token);\r\n\t\t\trunInAction(() => (this.user = user));\r\n\t\t\thistory.push(\"/activities\");\r\n\t\t\tstore.modalStore.closeModal();\r\n\t\t} catch (error) {\r\n\t\t\tthrow error;\r\n\t\t}\r\n\t};\r\n\tsetImage = (image: string) => {\r\n\t\tif (this.user) this.user.image = image;\r\n\t};\r\n\tsetDisplayName = (name: string) => {\r\n\t\tif (this.user) this.user.displayName = name;\r\n\t};\r\n}\r\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modelStore\";\nimport ProfileStore from \"./ProfileStore\";\nimport UserStore from \"./UserStore\";\n\ninterface Store {\n\tactivityStore: ActivityStore;\n\tcommonStore: CommonStore;\n\tuserStore: UserStore;\n\tmodalStore: ModalStore;\n\tprofileStore: ProfileStore;\n\tcommentStore : CommentStore;\n}\n\nexport const store: Store = {\n\tactivityStore: new ActivityStore(),\n\tcommonStore: new CommonStore(),\n\tuserStore: new UserStore(),\n\tmodalStore: new ModalStore(),\n\tprofileStore: new ProfileStore(),\n\tcommentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport const useStore = () => {\n\treturn useContext(StoreContext);\n};\n","import { makeAutoObservable, reaction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n\terror: ServerError | null = null;\n\ttoken: string | null = window.localStorage.getItem(\"jwt\");\n\tuploaded = false;\n\n\tconstructor() {\n\t\tmakeAutoObservable(this);\n\n\t\treaction(\n\t\t\t() => this.token,\n\t\t\t(token) => {\n\t\t\t\tif (token) {\n\t\t\t\t\twindow.localStorage.setItem(\"jwt\", token);\n\t\t\t\t} else {\n\t\t\t\t\twindow.localStorage.removeItem(\"jwt\");\n\t\t\t\t}\n\t\t\t},\n\t\t);\n\t}\n\n\tsetServerError = (error: ServerError) => {\n\t\tthis.error = error;\n\t};\n\tsetToken = (token: string | null) => {\n\t\tthis.token = token;\n\t};\n\n\tsetUploaded = () => {\n\t\tthis.uploaded = true;\n\t};\n}\n","import { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Modal {\r\n\topen: boolean;\r\n\tbody: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore {\r\n\tmodal: Modal = {\r\n\t\topen: false,\r\n\t\tbody: null,\r\n\t};\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\r\n\topenModal = (content: JSX.Element) => {\r\n\t\tthis.modal.open = true;\r\n\t\tthis.modal.body = content;\r\n\t};\r\n\r\n\tcloseModal = () => {\r\n\t\tthis.modal.open = false;\r\n\t\tthis.modal.body = null;\r\n\t};\r\n}\r\n","import {\r\n\tHubConnection,\r\n\tHubConnectionBuilder,\r\n\tLogLevel,\r\n} from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore {\r\n\tcomments: ChatComment[] = [];\r\n\thubConnection: HubConnection | null = null;\r\n\r\n\tconstructor() {\r\n\t\tmakeAutoObservable(this);\r\n\t}\r\n\tcreateHubConnection = (activityId: string) => {\r\n\t\tif (store.activityStore.selectedActivity) {\r\n\t\t\tthis.hubConnection = new HubConnectionBuilder()\r\n\t\t\t\t.withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\r\n\t\t\t\t\taccessTokenFactory: () => store.userStore.user!.token,\r\n\t\t\t\t})\r\n\t\t\t\t.withAutomaticReconnect()\r\n\t\t\t\t.configureLogging(LogLevel.Information)\r\n\t\t\t\t.build();\r\n\t\t\tthis.hubConnection\r\n\t\t\t\t.start()\r\n\t\t\t\t.catch((err) => console.log(\"Error establishing the connection:\", err));\r\n\t\t\tthis.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tcomments.forEach((comment) => {\r\n\t\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt + \"Z\");\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.comments = comments;\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tthis.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\r\n\t\t\t\trunInAction(() => {\r\n\t\t\t\t\tcomment.createdAt = new Date(comment.createdAt);\r\n\t\t\t\t\tthis.comments.push(comment);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\tstopHubConnection = () => {\r\n\t\tthis.hubConnection\r\n\t\t\t?.stop()\r\n\t\t\t.catch((err) => console.log(\"Error Stopping connection:\", err));\r\n\t};\r\n\tclearComments = () => {\r\n\t\tthis.comments = [];\r\n\t\tthis.stopHubConnection();\r\n\t};\r\n\r\n\taddComment = async (values: any) => {\r\n\t\tvalues.activityId = store.activityStore.selectedActivity?.id;\r\n\t\ttry {\r\n\t\t\tawait this.hubConnection?.invoke(\"SendComment\", values);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.log(err);\r\n\t\t}\r\n\t};\r\n}\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { Button, Container, Dropdown, Image, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nconst NavBar = () => {\n\tconst {\n\t\tuserStore: { user, logout },\n\t} = useStore();\n\treturn (\n\t\t<Menu inverted fixed=\"top\">\n\t\t\t<Container>\n\t\t\t\t<Menu.Item as={NavLink} exact to=\"/\" header>\n\t\t\t\t\t<img\n\t\t\t\t\t\tsrc=\"/assets/logo.png\"\n\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\tstyle={{ marginRight: \"10px\" }}\n\t\t\t\t\t/>\n\t\t\t\t\tActivitiesBar\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n\t\t\t\t<Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n\t\t\t\t<Menu.Item>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tas={NavLink}\n\t\t\t\t\t\tto=\"/createActivity\"\n\t\t\t\t\t\tpositive\n\t\t\t\t\t\tcontent=\"Create Activity\"\n\t\t\t\t\t/>\n\t\t\t\t</Menu.Item>\n\t\t\t\t<Menu.Item position=\"right\">\n\t\t\t\t\t<Image src={user?.image || \"assets/user.png\"} avatar spaced=\"right\" />\n\t\t\t\t\t<Dropdown pointing=\"top left\" text={user?.displayName}>\n\t\t\t\t\t\t<Dropdown.Menu>\n\t\t\t\t\t\t\t<Dropdown.Item\n\t\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\t\tto={`/profiles/${user?.username}`}\n\t\t\t\t\t\t\t\ttext=\"My Profile\"\n\t\t\t\t\t\t\t\ticon=\"user\"\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Dropdown.Item text=\"Logout\" icon=\"power\" onClick={logout} />\n\t\t\t\t\t\t</Dropdown.Menu>\n\t\t\t\t\t</Dropdown>\n\t\t\t\t</Menu.Item>\n\t\t\t</Container>\n\t\t</Menu>\n\t);\n};\n\nexport default observer(NavBar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst ActivityFilters = () => {\n\tconst {\n\t\tactivityStore: { predicate, setPrediacte },\n\t} = useStore();\n\n\treturn (\n\t\t<>\n\t\t\t<Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n\t\t\t\t<Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n\t\t\t\t<Menu.Item\n\t\t\t\t\tcontent=\"All Activities\"\n\t\t\t\t\tactive={predicate.has(\"all\")}\n\t\t\t\t\tonClick={() => setPrediacte(\"all\", \"true\")}\n\t\t\t\t/>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tcontent=\"I'm going\"\n\t\t\t\t\tactive={predicate.has(\"isGoing\")}\n\t\t\t\t\tonClick={() => setPrediacte(\"isGoing\", \"true\")}\n\t\t\t\t/>\n\t\t\t\t<Menu.Item\n\t\t\t\t\tcontent=\"I'm hosting\"\n\t\t\t\t\tactive={predicate.has(\"isHost\")}\n\t\t\t\t\tonClick={() => setPrediacte(\"isHost\", \"true\")}\n\t\t\t\t/>\n\t\t\t</Menu>\n\t\t\t<Header />\n\t\t\t<Calendar\n\t\t\t\tcalendarType=\"Hebrew\"\n\t\t\t\tonChange={(date) => setPrediacte(\"startDate\", date as Date)}\n\t\t\t\tvalue={predicate.get(\"startDate\") || new Date()}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default observer(ActivityFilters);\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nconst FollowButton = ({ profile }: Props) => {\r\n\tconst { profileStore, userStore } = useStore();\r\n\tconst { updateFollowing, loading } = profileStore;\r\n\r\n\tif (userStore.user?.username === profile.userName) return null;\r\n\r\n\tconst handleFollow = (e: SyntheticEvent, username: string) => {\r\n\t\te.preventDefault();\r\n\t\tprofile.following\r\n\t\t\t? updateFollowing(username, false)\r\n\t\t\t: updateFollowing(username, true);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Reveal animated=\"move\">\r\n\t\t\t<Reveal.Content visible style={{ width: \"100%\" }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\tcontent={profile.following ? \"Following\" : \"Follow\"}\r\n\t\t\t\t/>\r\n\t\t\t</Reveal.Content>\r\n\t\t\t<Reveal.Content hidden style={{ width: \"100%\" }}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tfluid\r\n\t\t\t\t\tbasic\r\n\t\t\t\t\tcolor={profile.following ? \"red\" : \"green\"}\r\n\t\t\t\t\tcontent={profile.following ? \"Unfollow\" : \"Follow\"}\r\n\t\t\t\t\tloading={loading}\r\n\t\t\t\t\tonClick={(e) => handleFollow(e, profile.userName)}\r\n\t\t\t\t/>\r\n\t\t\t</Reveal.Content>\r\n\t\t</Reveal>\r\n\t);\r\n};\r\n\r\nexport default observer(FollowButton);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Icon, Image } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nconst ProfileCard = ({ profile }: Props) => {\r\n\tconst truncate = (str: string | undefined) => {\r\n\t\tif (str) {\r\n\t\t\treturn str.length > 40 ? str.substring(0, 37) + \"...\" : str;\r\n\t\t}\r\n\t};\r\n\treturn (\r\n\t\t<Card as={Link} to={`/profiles/${profile.userName}`}>\r\n\t\t\t<Image src={profile.image || \"/assets/user.png\"} />\r\n\t\t\t<Card.Content>\r\n\t\t\t\t<Card.Header>{profile.displayName}</Card.Header>\r\n\t\t\t\t<Card.Description>{truncate(profile.bio)}</Card.Description>\r\n\t\t\t</Card.Content>\r\n\t\t\t<Card.Content extra>\r\n\t\t\t\t<Icon name=\"user\" />\r\n\t\t\t\t{profile.followersCount}\r\n\t\t\t</Card.Content>\r\n\t\t\t<FollowButton profile={profile} />\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileCard);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Image, List, Popup } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../../app/models/profile\";\r\nimport ProfileCard from \"../../profiles/ProfileCard\";\r\n\r\ninterface Props {\r\n\tattendees: Profile[];\r\n}\r\n\r\nconst ActivityListItemAttendee = ({ attendees }: Props) => {\r\n\tconst style = {\r\n\t\tborderColor: \"orange\",\r\n\t\tborderWidth: 3,\r\n\t};\r\n\treturn (\r\n\t\t<List horizontal>\r\n\t\t\t{attendees.map((attendee) => (\r\n\t\t\t\t<Popup\r\n\t\t\t\t\thoverable\r\n\t\t\t\t\tkey={attendee.userName}\r\n\t\t\t\t\ttrigger={\r\n\t\t\t\t\t\t<List.Item\r\n\t\t\t\t\t\t\tkey={attendee.userName}\r\n\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\tto={`/profiles/${attendee.userName}`}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\tsize=\"mini\"\r\n\t\t\t\t\t\t\t\tcircular\r\n\t\t\t\t\t\t\t\tsrc={attendee.image || \"/assets/user.png\"}\r\n\t\t\t\t\t\t\t\tbordered\r\n\t\t\t\t\t\t\t\tstyle={attendee.following ? style : null}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</List.Item>\r\n\t\t\t\t\t}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Popup.Content>\r\n\t\t\t\t\t\t<ProfileCard profile={attendee} />\r\n\t\t\t\t\t</Popup.Content>\r\n\t\t\t\t</Popup>\r\n\t\t\t))}\r\n\t\t</List>\r\n\t);\r\n};\r\n\r\nexport default observer(ActivityListItemAttendee);\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Icon, Item, Label, Segment } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { format } from \"date-fns\";\nimport ActivityListItemAttendee from \"./ActivityListItemAttendee\";\ninterface Props {\n\tactivity: Activity;\n}\n\nconst ActivityListItem = ({ activity }: Props) => {\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment>\n\t\t\t\t{activity.isCancelled && (\n\t\t\t\t\t<Label\n\t\t\t\t\t\tattached=\"top\"\n\t\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\t\tcontent=\"Cancelled\"\n\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\n\t\t\t\t\t/>\n\t\t\t\t)}\n\t\t\t\t<Item.Group>\n\t\t\t\t\t<Item>\n\t\t\t\t\t\t<Item.Image\n\t\t\t\t\t\t\tsize=\"tiny\"\n\t\t\t\t\t\t\tcircular\n\t\t\t\t\t\t\tsrc={activity.host?.image || \"/assets/user.png\"}\n\t\t\t\t\t\t\tstyle={{ marginBottom: 5 }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Item.Content>\n\t\t\t\t\t\t\t<Item.Header as={Link} to={`/activities/${activity.id}`}>\n\t\t\t\t\t\t\t\t{activity.title}\n\t\t\t\t\t\t\t</Item.Header>\n\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\tHosted by{\" \"}\n\t\t\t\t\t\t\t\t<Link to={`/profiles/${activity.hostUsername}`}>\n\t\t\t\t\t\t\t\t\t{activity.hostUsername}\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t{activity.isHost && (\n\t\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\t\t<Label basic color=\"orange\">\n\t\t\t\t\t\t\t\t\t\tYou are hosting the activity\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{activity.isGoing && !activity.isHost && (\n\t\t\t\t\t\t\t\t<Item.Description>\n\t\t\t\t\t\t\t\t\t<Label basic color=\"green\">\n\t\t\t\t\t\t\t\t\t\tYou are going to the activity\n\t\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t\t</Item.Description>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t</Item>\n\t\t\t\t</Item.Group>\n\t\t\t</Segment>\n\t\t\t<Segment>\n\t\t\t\t<span>\n\t\t\t\t\t<Icon name=\"clock\" /> {format(activity.date!, \"dd MMM yyyy h:aa\")}\n\t\t\t\t\t<Icon name=\"marker\" /> {activity.venue}\n\t\t\t\t</span>\n\t\t\t</Segment>\n\t\t\t<Segment secondary>\n\t\t\t\t<ActivityListItemAttendee attendees={activity.attendees!} />\n\t\t\t</Segment>\n\t\t\t<Segment clearing>\n\t\t\t\t<span>{activity.description}</span>\n\t\t\t\t<Button\n\t\t\t\t\tas={Link}\n\t\t\t\t\tto={`/activities/${activity.id}`}\n\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\tfloated=\"right\"\n\t\t\t\t\tcontent=\"View\"\n\t\t\t\t/>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n\nexport default ActivityListItem;\n","import { observer } from \"mobx-react-lite\";\nimport React, { Fragment } from \"react\";\nimport { Header } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nconst ActivityList = () => {\n\tconst { activityStore } = useStore();\n\tconst { groupedActivities } = activityStore;\n\n\treturn (\n\t\t<>\n\t\t\t{groupedActivities.map(([group, activities]) => (\n\t\t\t\t<Fragment key={group}>\n\t\t\t\t\t<Header sub color=\"teal\">\n\t\t\t\t\t\t{group}\n\t\t\t\t\t</Header>\n\t\t\t\t\t{activities.map((activity) => (\n\t\t\t\t\t\t<ActivityListItem key={activity.id} activity={activity} />\n\t\t\t\t\t))}\n\t\t\t\t</Fragment>\n\t\t\t))}\n\t\t</>\n\t);\n};\nexport default observer(ActivityList);\n","import React, { Fragment } from \"react\";\r\nimport { Button, Placeholder, Segment } from \"semantic-ui-react\";\r\n\r\nconst ActivityListItemPlaceHolder = () => {\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t<Placeholder fluid style={{ marginTop: 25 }}>\r\n\t\t\t\t<Segment.Group>\r\n\t\t\t\t\t<Segment style={{ minHeight: 110 }}>\r\n\t\t\t\t\t\t<Placeholder>\r\n\t\t\t\t\t\t\t<Placeholder.Header image>\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t</Placeholder.Header>\r\n\t\t\t\t\t\t\t<Placeholder.Paragraph>\r\n\t\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t</Placeholder.Paragraph>\r\n\t\t\t\t\t\t</Placeholder>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t<Segment>\r\n\t\t\t\t\t\t<Placeholder>\r\n\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t\t<Placeholder.Line />\r\n\t\t\t\t\t\t</Placeholder>\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t\t<Segment secondary style={{ minHeight: 70 }} />\r\n\t\t\t\t\t<Segment clearing>\r\n\t\t\t\t\t\t<Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\r\n\t\t\t\t\t</Segment>\r\n\t\t\t\t</Segment.Group>\r\n\t\t\t</Placeholder>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default ActivityListItemPlaceHolder;\r\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport { Grid, Loader } from \"semantic-ui-react\";\nimport { PagingParams } from \"../../../app/models/pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport ActivityListItemPlaceHolder from \"./ActivityListItemPlaceHolder\";\n\nconst ActivityDashboard = () => {\n\tconst { activityStore } = useStore();\n\tconst { loadActivities, activityRegistry, setPagingParams, pagination } =\n\t\tactivityStore;\n\tconst [loadingNext, setLoadingNext] = useState(false);\n\n\tconst handleGetNext = () => {\n\t\tsetLoadingNext(true);\n\t\tsetPagingParams(new PagingParams(pagination!.currentPage + 1));\n\t\tloadActivities().then(() => setLoadingNext(false));\n\t};\n\n\tuseEffect(() => {\n\t\tif (activityRegistry.size <= 1) loadActivities();\n\t}, [activityRegistry.size, loadActivities]);\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width=\"10\">\n\t\t\t\t{activityStore.loadingInitial && !loadingNext ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<ActivityListItemPlaceHolder />\n\t\t\t\t\t\t<ActivityListItemPlaceHolder />\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<InfiniteScroll\n\t\t\t\t\t\tpageStart={0}\n\t\t\t\t\t\tloadMore={handleGetNext}\n\t\t\t\t\t\thasMore={\n\t\t\t\t\t\t\t!loadingNext &&\n\t\t\t\t\t\t\t!!pagination &&\n\t\t\t\t\t\t\tpagination.currentPage < pagination.totalItems\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialLoad={false}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ActivityList />\n\t\t\t\t\t</InfiniteScroll>\n\t\t\t\t)}\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width=\"6\">\n\t\t\t\t<ActivityFilters />\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={10}>\n\t\t\t\t<Loader active={loadingNext} />\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t);\n};\nexport default observer(ActivityDashboard);\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tplaceholder: string;\r\n\tname: string;\r\n\tlabel?: string;\r\n\ttype?:string\r\n}\r\n\r\nconst MyTextInput = (props: Props) => {\r\n\tconst [field, meta] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<input {...field} {...props} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n};\r\n\r\nexport default MyTextInput;\r\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header, Label } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInputs\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst LoginForm = () => {\r\n\tconst { userStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ email: \"\", password: \"\", error: null }}\r\n\t\t\tonSubmit={(values, { setErrors }) =>\r\n\t\t\t\tuserStore\r\n\t\t\t\t\t.login(values)\r\n\t\t\t\t\t.catch((error) => setErrors({ error: \"Invalid email or password\" }))\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, isSubmitting, errors }) => (\r\n\t\t\t\t<Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\tas=\"h2\"\r\n\t\t\t\t\t\tcontent=\"Login to ActivitiesBar\"\r\n\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MyTextInput name=\"email\" placeholder=\"email\" />\r\n\t\t\t\t\t<MyTextInput name=\"password\" placeholder=\"password\" type=\"password\" />\r\n\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\tname=\"error\"\r\n\t\t\t\t\t\trender={() => (\r\n\t\t\t\t\t\t\t<Label\r\n\t\t\t\t\t\t\t\tstyle={{ marginBottom: 10 }}\r\n\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\tcontent={errors.error}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tpositive\r\n\t\t\t\t\t\tcontent=\"Login\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default observer(LoginForm);\r\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n\terrors: any;\n}\n\nconst ValidationErrors = ({ errors }: Props) => {\n\treturn (\n\t\t<Message error>\n\t\t\t{errors && (\n\t\t\t\t<Message.List>\n\t\t\t\t\t{errors.map((err: any, i: any) => (\n\t\t\t\t\t\t<Message.Item key={i}>{err}</Message.Item>\n\t\t\t\t\t))}\n\t\t\t\t</Message.List>\n\t\t\t)}\n\t\t</Message>\n\t);\n};\n\nexport default ValidationErrors;\n","import { ErrorMessage, Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Button, Header } from \"semantic-ui-react\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInputs\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\nimport ValidationErrors from \"../errors/ValidationErrors\";\r\n\r\nconst RegisterForm = () => {\r\n\tconst { userStore } = useStore();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\tdisplayName: \"\",\r\n\t\t\t\tusername: \"\",\r\n\t\t\t\temail: \"\",\r\n\t\t\t\tpassword: \"\",\r\n\t\t\t\terror: null,\r\n\t\t\t}}\r\n\t\t\tonSubmit={(values, { setErrors }) =>\r\n\t\t\t\tuserStore.register(values).catch((error) => setErrors({ error }))\r\n\t\t\t}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tdisplayName: Yup.string().required(),\r\n\t\t\t\tusername: Yup.string().required(),\r\n\t\t\t\temail: Yup.string().required().email(),\r\n\t\t\t\tpassword: Yup.string().required(),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\r\n\t\t\t\t<Form\r\n\t\t\t\t\tclassName=\"ui form error\"\r\n\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\tas=\"h2\"\r\n\t\t\t\t\t\tcontent=\"Sign up to ActivitiesBar\"\r\n\t\t\t\t\t\tcolor=\"teal\"\r\n\t\t\t\t\t\ttextAlign=\"center\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<MyTextInput name=\"displayName\" placeholder=\"Display name\" />\r\n\t\t\t\t\t<MyTextInput name=\"username\" placeholder=\"Username\" />\r\n\t\t\t\t\t<MyTextInput name=\"email\" placeholder=\"email\" />\r\n\t\t\t\t\t<MyTextInput name=\"password\" placeholder=\"password\" type=\"password\" />\r\n\t\t\t\t\t<ErrorMessage\r\n\t\t\t\t\t\tname=\"error\"\r\n\t\t\t\t\t\trender={() => <ValidationErrors errors={errors.error} />}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tpositive\r\n\t\t\t\t\t\tcontent=\"Register\"\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tfluid\r\n\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\tdisabled={!isValid || !dirty || isSubmitting}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default observer(RegisterForm);\r\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Container, Header, Segment, Image, Button } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nconst HomePage = () => {\n\tconst { userStore, modalStore } = useStore();\n\treturn (\n\t\t<Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n\t\t\t<Container text>\n\t\t\t\t<Header as=\"h1\" inverted>\n\t\t\t\t\t<Image\n\t\t\t\t\t\tsize=\"massive\"\n\t\t\t\t\t\tsrc=\"/assets/logo.png\"\n\t\t\t\t\t\talt=\"logo\"\n\t\t\t\t\t\tstyle={{ marginBottom: 12 }}\n\t\t\t\t\t/>\n\t\t\t\t\tActivitiesBar\n\t\t\t\t</Header>\n\t\t\t\t{userStore.isLoggedIn ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Header as=\"h2\" inverted content=\"Welcome to ActivitiesBar\" />\n\t\t\t\t\t\t<Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n\t\t\t\t\t\t\tGo to Activities!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => modalStore.openModal(<LoginForm />)}\n\t\t\t\t\t\t\tsize=\"huge\"\n\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tLogin!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tonClick={() => modalStore.openModal(<RegisterForm />)}\n\t\t\t\t\t\t\tsize=\"huge\"\n\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tRegister!\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Container>\n\t\t</Segment>\n\t);\n};\nexport default observer(HomePage);\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n\tinverted?: boolean;\n\tcontent?: string;\n}\n\nconst LoadingComponent = ({\n\tinverted = true,\n\tcontent = \"Loading...\",\n}: Props) => {\n\treturn (\n\t\t<Dimmer active={true} inverted={inverted}>\n\t\t\t<Loader content={content} />\n\t\t</Dimmer>\n\t);\n};\nexport default LoadingComponent;\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tplaceholder: string;\r\n\tname: string;\r\n\trows: number;\r\n\tlabel?: string;\r\n}\r\n\r\nconst MyTextArea = (props: Props) => {\r\n\tconst [field, meta] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<textarea {...field} {...props} />\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n};\r\n\r\nexport default MyTextArea;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tplaceholder: string;\r\n\tname: string;\r\n\toptions: any;\r\n\tlabel?: string;\r\n}\r\n\r\nconst MySelectInput = (props: Props) => {\r\n\tconst [field, meta, helpers] = useField(props.name);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<label>{props.label}</label>\r\n\t\t\t<Select\r\n\t\t\t\tclearable\r\n\t\t\t\toptions={props.options}\r\n\t\t\t\tvalue={field.value || null}\r\n\t\t\t\tonChange={(event, data) => helpers.setValue(data.value)}\r\n                onBlur={()=>helpers.setTouched(true)}\r\n                placeholder={props.placeholder}\r\n\t\t\t/>\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n};\r\n\r\nexport default MySelectInput;\r\n","import React from \"react\";\r\nimport { useField } from \"formik\";\r\nimport { Form, Label } from \"semantic-ui-react\";\r\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\r\n\r\nconst MyDateInput = (props: Partial<ReactDatePickerProps>) => {\r\n\tconst [field, meta, helpers] = useField(props.name!);\r\n\treturn (\r\n\t\t<Form.Field error={meta.touched && !!meta.error}>\r\n\t\t\t<DatePicker\r\n\t\t\t\t{...field}\r\n\t\t\t\t{...props}\r\n\t\t\t\tselected={(field.value && new Date(field.value)) || null}\r\n\t\t\t\tonChange={(value) => helpers.setValue(value)}\r\n\t\t\t/>\r\n\t\t\t{meta.touched && meta.error ? (\r\n\t\t\t\t<Label basic color=\"red\">\r\n\t\t\t\t\t{meta.error}\r\n\t\t\t\t</Label>\r\n\t\t\t) : null}\r\n\t\t</Form.Field>\r\n\t);\r\n};\r\n\r\nexport default MyDateInput;\r\n","export const categoryOptions = [\r\n\t{ text: \"Drinks\", value: \"drinks\" },\r\n\t{ text: \"Culture\", value: \"culture\" },\r\n\t{ text: \"Film\", value: \"film\" },\r\n\t{ text: \"Food\", value: \"food\" },\r\n\t{ text: \"Music\", value: \"music\" },\r\n\t{ text: \"Travel\", value: \"travel\" },\r\n];\r\n","import React, { useEffect, useState } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Link, useHistory, useParams } from \"react-router-dom\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { v4 as uuid } from \"uuid\";\nimport { Formik, Form } from \"formik\";\nimport * as Yup from \"yup\";\nimport MyTextInput from \"../../../app/common/form/MyTextInputs\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport { ActivityFormValues } from \"../../../app/models/activity\";\n\nconst ActivityForm = () => {\n\tconst history = useHistory();\n\tconst { activityStore } = useStore();\n\tconst { createActivity, updateActivity, loadActivity, loadingInitial } =\n\t\tactivityStore;\n\tconst { id } = useParams<{ id: string }>();\n\n\tconst [activity, setActivity] = useState<ActivityFormValues>(\n\t\tnew ActivityFormValues(),\n\t);\n\n\tconst validationSchema = Yup.object({\n\t\ttitle: Yup.string().required(\"The activity title is required\"),\n\t\tdescription: Yup.string().required(\"The activity description is required\"),\n\t\tcategory: Yup.string().required(),\n\t\tdate: Yup.string().required(\"Date is required\").nullable(),\n\t\tcity: Yup.string().required(),\n\t\tvenue: Yup.string().required(),\n\t});\n\n\tuseEffect(() => {\n\t\tif (id)\n\t\t\tloadActivity(id).then((activity) =>\n\t\t\t\tsetActivity(new ActivityFormValues(activity)),\n\t\t\t);\n\t}, [id, loadActivity]);\n\n\tconst handleFormSubmit = (activity: ActivityFormValues) => {\n\t\tif (!activity.id) {\n\t\t\tlet newActivity = {\n\t\t\t\t...activity,\n\t\t\t\tid: uuid(),\n\t\t\t};\n\t\t\tcreateActivity(newActivity).then(() =>\n\t\t\t\thistory.push(`/activities/${newActivity.id}`),\n\t\t\t);\n\t\t} else {\n\t\t\tupdateActivity(activity).then(() =>\n\t\t\t\thistory.push(`/activities/${activity.id}`),\n\t\t\t);\n\t\t}\n\t};\n\n\tif (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\n\n\treturn (\n\t\t<Segment clearing>\n\t\t\t<Header content=\"Activity Details\" subheader color=\"teal\" />\n\t\t\t<Formik\n\t\t\t\tinitialValues={activity}\n\t\t\t\tonSubmit={(values) => handleFormSubmit(values)}\n\t\t\t\tenableReinitialize\n\t\t\t\tvalidationSchema={validationSchema}\n\t\t\t>\n\t\t\t\t{({ handleSubmit, isValid, isSubmitting, dirty }) => (\n\t\t\t\t\t<Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n\t\t\t\t\t\t<MyTextInput placeholder=\"Title\" name=\"title\" />\n\t\t\t\t\t\t<MyTextArea placeholder=\"Description\" name=\"description\" rows={3} />\n\t\t\t\t\t\t<MySelectInput\n\t\t\t\t\t\t\tplaceholder=\"Category\"\n\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\toptions={categoryOptions}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<MyDateInput\n\t\t\t\t\t\t\tplaceholderText=\"Date\"\n\t\t\t\t\t\t\tname=\"date\"\n\t\t\t\t\t\t\tshowTimeSelect\n\t\t\t\t\t\t\ttimeCaption=\"time\"\n\t\t\t\t\t\t\tdateFormat=\"MMMM d, yyyy h:mm aa\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Header content=\"Location Details\" subheader color=\"teal\" />\n\n\t\t\t\t\t\t<MyTextInput placeholder=\"City\" name=\"city\" />\n\t\t\t\t\t\t<MyTextInput placeholder=\"Venue\" name=\"venue\" />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tloading={isSubmitting}\n\t\t\t\t\t\t\tfloated=\"right\"\n\t\t\t\t\t\t\tpositive\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\tcontent=\"Submit\"\n\t\t\t\t\t\t\tdisabled={!isValid || isSubmitting || !dirty}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\tto=\"/activities\"\n\t\t\t\t\t\t\tfloated=\"right\"\n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tcontent=\"Cancel\"\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form>\n\t\t\t\t)}\n\t\t\t</Formik>\n\t\t</Segment>\n\t);\n};\n\nexport default observer(ActivityForm);\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Loader } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n\tactivityId: string;\n}\n\nconst ActivityDetailedChat = ({ activityId }: Props) => {\n\tconst { commentStore } = useStore();\n\n\tuseEffect(() => {\n\t\tif (activityId) {\n\t\t\tcommentStore.createHubConnection(activityId);\n\t\t}\n\t\treturn () => {\n\t\t\tcommentStore.clearComments();\n\t\t};\n\t}, [activityId, commentStore]);\n\n\treturn (\n\t\t<>\n\t\t\t<Segment\n\t\t\t\ttextAlign=\"center\"\n\t\t\t\tattached=\"top\"\n\t\t\t\tinverted\n\t\t\t\tcolor=\"teal\"\n\t\t\t\tstyle={{ border: \"none\" }}\n\t\t\t>\n\t\t\t\t<Header>Chat about this event</Header>\n\t\t\t</Segment>\n\t\t\t<Segment attached clearing>\n\t\t\t\t<Comment.Group>\n\t\t\t\t\t{commentStore.comments.map((comment) => (\n\t\t\t\t\t\t<Comment key={comment.id}>\n\t\t\t\t\t\t\t<Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n\t\t\t\t\t\t\t<Comment.Content>\n\t\t\t\t\t\t\t\t<Comment.Author as={Link} to={`profiles/${comment.username}`}>\n\t\t\t\t\t\t\t\t\t{comment.displayName}\n\t\t\t\t\t\t\t\t</Comment.Author>\n\t\t\t\t\t\t\t\t<Comment.Metadata>\n\t\t\t\t\t\t\t\t\t<div>{formatDistanceToNow(comment.createdAt)} ago </div>\n\t\t\t\t\t\t\t\t</Comment.Metadata>\n\t\t\t\t\t\t\t\t<Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n\t\t\t\t\t\t\t\t\t{comment.body}\n\t\t\t\t\t\t\t\t</Comment.Text>\n\t\t\t\t\t\t\t</Comment.Content>\n\t\t\t\t\t\t</Comment>\n\t\t\t\t\t))}\n\t\t\t\t\t<Formik\n\t\t\t\t\t\tonSubmit={(values, { resetForm }) =>\n\t\t\t\t\t\t\tcommentStore.addComment(values).then(() => resetForm())\n\t\t\t\t\t\t}\n\t\t\t\t\t\tinitialValues={{ body: \"\" }}\n\t\t\t\t\t\tvalidationSchema={Yup.object({\n\t\t\t\t\t\t\tbody: Yup.string().required(),\n\t\t\t\t\t\t})}\n\t\t\t\t\t>\n\t\t\t\t\t\t{({ isSubmitting, isValid, handleSubmit }) => (\n\t\t\t\t\t\t\t<Form className=\"ui form\">\n\t\t\t\t\t\t\t\t<Field name=\"body\">\n\t\t\t\t\t\t\t\t\t{(props: FieldProps) => (\n\t\t\t\t\t\t\t\t\t\t<div style={{ position: \"relative\" }}>\n\t\t\t\t\t\t\t\t\t\t\t<Loader active={isSubmitting} />\n\t\t\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Enter your comment (Enter to submit,Shift + Enter for new line)\"\n\t\t\t\t\t\t\t\t\t\t\t\trows={2}\n\t\t\t\t\t\t\t\t\t\t\t\t{...props.field}\n\t\t\t\t\t\t\t\t\t\t\t\tonKeyPress={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\" && e.shiftKey) return;\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (e.key === \"Enter\" && !e.shiftKey) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tisValid && handleSubmit();\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</Field>\n\t\t\t\t\t\t\t</Form>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</Formik>\n\t\t\t\t</Comment.Group>\n\t\t\t</Segment>\n\t\t</>\n\t);\n};\nexport default observer(ActivityDetailedChat);\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n\tactivity: Activity;\n}\n\nconst ActivityDetailedInfo = ({ activity }: Props) => {\n\treturn (\n\t\t<Segment.Group>\n\t\t\t<Segment attached=\"top\">\n\t\t\t\t<Grid>\n\t\t\t\t\t<Grid.Column width={1}>\n\t\t\t\t\t\t<Icon size=\"large\" color=\"teal\" name=\"info\" />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column width={15}>\n\t\t\t\t\t\t<p>{activity.description}</p>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Segment>\n\t\t\t<Segment attached>\n\t\t\t\t<Grid verticalAlign=\"middle\">\n\t\t\t\t\t<Grid.Column width={1}>\n\t\t\t\t\t\t<Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column width={15}>\n\t\t\t\t\t\t<span>{format(activity.date!,'dd MMM yyyy h:mm aa') }</span>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Segment>\n\t\t\t<Segment attached>\n\t\t\t\t<Grid verticalAlign=\"middle\">\n\t\t\t\t\t<Grid.Column width={1}>\n\t\t\t\t\t\t<Icon name=\"marker\" size=\"large\" color=\"teal\" />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column width={11}>\n\t\t\t\t\t\t<span>\n\t\t\t\t\t\t\t{activity.venue}, {activity.city}\n\t\t\t\t\t\t</span>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid>\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\nexport default observer(ActivityDetailedInfo);\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Activity } from \"../../../app/models/activity\";\n\ninterface Props {\n\tactivity: Activity;\n}\n\nconst ActivityDetailedSidebar = ({ activity: { attendees, host } }: Props) => {\n\tif (!attendees) return null;\n\treturn (\n\t\t<>\n\t\t\t<Segment\n\t\t\t\ttextAlign=\"center\"\n\t\t\t\tstyle={{ border: \"none\" }}\n\t\t\t\tattached=\"top\"\n\t\t\t\tsecondary\n\t\t\t\tinverted\n\t\t\t\tcolor=\"teal\"\n\t\t\t>\n\t\t\t\t{attendees.length === 1 ? \" One Person\" : ` ${attendees.length} People`}{\" \"}\n\t\t\t\tgoing\n\t\t\t</Segment>\n\t\t\t<Segment attached>\n\t\t\t\t<List relaxed divided>\n\t\t\t\t\t{attendees.map((attendee) => (\n\t\t\t\t\t\t<Item style={{ position: \"relative\" }} key={attendee.userName}>\n\t\t\t\t\t\t\t{attendee.userName === host?.userName && (\n\t\t\t\t\t\t\t\t<Label\n\t\t\t\t\t\t\t\t\tstyle={{ position: \"absolute\" }}\n\t\t\t\t\t\t\t\t\tcolor=\"orange\"\n\t\t\t\t\t\t\t\t\tribbon=\"right\"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tHost\n\t\t\t\t\t\t\t\t</Label>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t<Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n\t\t\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\n\t\t\t\t\t\t\t\t<Item.Header as=\"h3\">\n\t\t\t\t\t\t\t\t\t<Link to={`/profile/${attendee.userName}`}>\n\t\t\t\t\t\t\t\t\t\t{attendee.displayName}\n\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t</Item.Header>\n\t\t\t\t\t\t\t\t{attendee.following &&\n\t\t\t\t\t\t\t\t<Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>}\n\t\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t))}\n\t\t\t\t</List>\n\t\t\t</Segment>\n\t\t</>\n\t);\n};\n\nexport default observer(ActivityDetailedSidebar);\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/activity\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n\tfilter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n\tposition: \"absolute\",\n\tbottom: \"5%\",\n\tleft: \"5%\",\n\twidth: \"100%\",\n\theight: \"auto\",\n\tcolor: \"white\",\n};\n\ninterface Props {\n\tactivity: Activity;\n}\n\nconst ActivityDetailedHeader = ({ activity }: Props) => {\n\tconst {\n\t\tactivityStore: { updateAttendance, loading, cancelActivityToggle },\n\t} = useStore();\n\treturn (\n\t\t<Segment.Group>\n\t\t\t{activity.isCancelled && (\n\t\t\t\t<Label\n\t\t\t\t\tstyle={{ position: \"absolute\", zIndex: 100, left: -14, top: 20 }}\n\t\t\t\t\tribbon\n\t\t\t\t\tcolor=\"red\"\n\t\t\t\t\tcontent=\"Cancelled\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n\t\t\t\t<Image\n\t\t\t\t\tsrc={`/assets/categoryImages/${activity.category}.jpg`}\n\t\t\t\t\tfluid\n\t\t\t\t\tstyle={activityImageStyle}\n\t\t\t\t/>\n\t\t\t\t<Segment style={activityImageTextStyle} basic>\n\t\t\t\t\t<Item.Group>\n\t\t\t\t\t\t<Item>\n\t\t\t\t\t\t\t<Item.Content>\n\t\t\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\t\t\tsize=\"huge\"\n\t\t\t\t\t\t\t\t\tcontent={activity.title}\n\t\t\t\t\t\t\t\t\tstyle={{ color: \"white\" }}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<p>{format(activity.date!, \"ddd MMM yyyy\")}</p>\n\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\tHosted by{\" \"}\n\t\t\t\t\t\t\t\t\t<strong>\n\t\t\t\t\t\t\t\t\t\t<Link to={`/profiles/${activity.host?.displayName}`}>\n\t\t\t\t\t\t\t\t\t\t\t{activity.host?.displayName}\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</strong>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Item.Content>\n\t\t\t\t\t\t</Item>\n\t\t\t\t\t</Item.Group>\n\t\t\t\t</Segment>\n\t\t\t</Segment>\n\t\t\t<Segment clearing attached=\"bottom\">\n\t\t\t\t{activity.isHost ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tcolor={activity.isCancelled ? \"green\" : \"red\"}\n\t\t\t\t\t\t\tfloated=\"left\"\n\t\t\t\t\t\t\tbasic\n\t\t\t\t\t\t\tcontent={\n\t\t\t\t\t\t\t\tactivity.isCancelled\n\t\t\t\t\t\t\t\t\t? \"Re-activate Activity\"\n\t\t\t\t\t\t\t\t\t: \"Cancel Activity\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tonClick={cancelActivityToggle}\n\t\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={activity.isCancelled}\n\t\t\t\t\t\t\tcolor=\"orange\"\n\t\t\t\t\t\t\tfloated=\"right\"\n\t\t\t\t\t\t\tas={Link}\n\t\t\t\t\t\t\tto={`/manage/${activity.id}`}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tManage Event\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t) : activity.isGoing ? (\n\t\t\t\t\t<Button onClick={updateAttendance} loading={loading}>\n\t\t\t\t\t\tCancel attendance\n\t\t\t\t\t</Button>\n\t\t\t\t) : (\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"teal\"\n\t\t\t\t\t\tonClick={updateAttendance}\n\t\t\t\t\t\tloading={loading}\n\t\t\t\t\t\tdisabled={activity.isCancelled}\n\t\t\t\t\t>\n\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\tJoin Activity\n\t\t\t\t\t</Button>\n\t\t\t\t)}\n\t\t\t</Segment>\n\t\t</Segment.Group>\n\t);\n};\n\nexport default observer(ActivityDetailedHeader);\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\nimport ActivityDetailedHeader from \"./ActivityDetaledHeader\";\n\nconst ActivityDetails = () => {\n\tconst { activityStore } = useStore();\n\tconst {\n\t\tselectedActivity: activity,\n\t\tloadActivity,\n\t\tloadingInitial,\n\t\tclearSelectedActivity,\n\t} = activityStore;\n\tconst { id } = useParams<{ id: string }>();\n\n\tuseEffect(() => {\n\t\tif (id) loadActivity(id);\n\t\treturn () => clearSelectedActivity();\n\t}, [id, loadActivity,clearSelectedActivity\n\t]);\n\n\tif (loadingInitial || !activity) return <LoadingComponent />;\n\n\treturn (\n\t\t<Grid>\n\t\t\t<Grid.Column width={10}>\n\t\t\t\t<ActivityDetailedHeader activity={activity} />\n\t\t\t\t<ActivityDetailedInfo activity={activity} />\n\t\t\t\t<ActivityDetailedChat activityId={activity.id} />\n\t\t\t</Grid.Column>\n\t\t\t<Grid.Column width={6}>\n\t\t\t\t<ActivityDetailedSidebar activity={activity} />\n\t\t\t</Grid.Column>\n\t\t</Grid>\n\t);\n};\nexport default observer(ActivityDetails);\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nconst TestErrors = () => {\n\tconst baseUrl = process.env.REACT_APP_API_URL;\n\tconst [errors, setErrors] = useState(null);\n\n\tconst handleNotFound = () => {\n\t\taxios\n\t\t\t.get(baseUrl + \"buggy/not-found\")\n\t\t\t.catch((err) => console.log(err.response));\n\t};\n\n\tconst handleBadRequest = () => {\n\t\taxios\n\t\t\t.get(baseUrl + \"buggy/bad-request\")\n\t\t\t.catch((err) => console.log(err.response));\n\t};\n\n\tconst handleServerError = () => {\n\t\taxios\n\t\t\t.get(baseUrl + \"buggy/server-error\")\n\t\t\t.catch((err) => console.log(err.response));\n\t};\n\n\tconst handleUnauthorised = () => {\n\t\taxios\n\t\t\t.get(baseUrl + \"buggy/unauthorised\")\n\t\t\t.catch((err) => console.log(err.response));\n\t};\n\n\tconst handleBadGuid = () => {\n\t\taxios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\n\t};\n\n\tconst handleValidationError = () => {\n\t\taxios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Header as=\"h1\" content=\"Test Error component\" />\n\t\t\t<Segment>\n\t\t\t\t<Button.Group widths=\"7\">\n\t\t\t\t\t<Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleBadRequest}\n\t\t\t\t\t\tcontent=\"Bad Request\"\n\t\t\t\t\t\tbasic\n\t\t\t\t\t\tprimary\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleValidationError}\n\t\t\t\t\t\tcontent=\"Validation Error\"\n\t\t\t\t\t\tbasic\n\t\t\t\t\t\tprimary\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleServerError}\n\t\t\t\t\t\tcontent=\"Server Error\"\n\t\t\t\t\t\tbasic\n\t\t\t\t\t\tprimary\n\t\t\t\t\t/>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tonClick={handleUnauthorised}\n\t\t\t\t\t\tcontent=\"Unauthorised\"\n\t\t\t\t\t\tbasic\n\t\t\t\t\t\tprimary\n\t\t\t\t\t/>\n\t\t\t\t\t<Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n\t\t\t\t</Button.Group>\n\t\t\t</Segment>\n\t\t\t{errors && <ValidationErrors errors={errors} />}\n\t\t</>\n\t);\n};\nexport default TestErrors;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nconst NotFound = () => {\n\treturn (\n\t\t<Segment placeholder>\n\t\t\t<Header icon>\n\t\t\t\t<Icon name=\"search\" />\n\t\t\t\tOops - we've looked everywhere and could not find this.\n\t\t\t</Header>\n\t\t\t<Segment.Inline>\n\t\t\t\t<Button as={Link} to=\"/activities\" primary>\n\t\t\t\t\tReturn to activities page\n\t\t\t\t</Button>\n\t\t\t</Segment.Inline>\n\t\t</Segment>\n\t);\n};\nexport default NotFound;\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nconst ServerError = () => {\n\tconst { commonStore } = useStore();\n\n\treturn (\n\t\t<Container>\n\t\t\t<Header as=\"h1\" content=\"Server Error\" />\n\t\t\t{commonStore.error && (\n\t\t\t\t<Segment>\n\t\t\t\t\t<Header as=\"h4\" content=\"Stack trace\" color=\"teal\" />\n\t\t\t\t\t<code style={{ marginTop: \"10px\" }}>{commonStore.error}</code>\n\t\t\t\t</Segment>\n\t\t\t)}\n\t\t</Container>\n\t);\n};\n\nexport default observer(ServerError);\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../stores/store\";\r\n\r\nconst ModalContainer = () => {\r\n\tconst { modalStore } = useStore();\r\n\treturn (\r\n\t\t<Modal\r\n\t\t\topen={modalStore.modal.open}\r\n\t\t\tonClose={modalStore.closeModal}\r\n\t\t\tsize=\"mini\"\r\n\t\t>\r\n\t\t\t<Modal.Content>{modalStore.modal.body}</Modal.Content>\r\n\t\t</Modal>\r\n\t);\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInputs\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from \"yup\";\r\n\r\ninterface Props {\r\n\tsetEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nconst ProfileEditForm = ({ setEditMode }: Props) => {\r\n\tconst {\r\n\t\tprofileStore: { profile, updateProfile },\r\n\t} = useStore();\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\r\n\t\t\tonSubmit={(values) => {\r\n\t\t\t\tupdateProfile(values).then(() => {\r\n\t\t\t\t\tsetEditMode(false);\r\n\t\t\t\t});\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={Yup.object({\r\n\t\t\t\tdisplayName: Yup.string().required(),\r\n\t\t\t})}\r\n\t\t>\r\n\t\t\t{({ isSubmitting, isValid, dirty }) => (\r\n\t\t\t\t<Form className=\"ui form\">\r\n\t\t\t\t\t<MyTextInput placeholder=\"Display Name\" name=\"displayName\" />\r\n\t\t\t\t\t<MyTextArea rows={3} placeholder=\"Add your bio\" name=\"bio\" />\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tpositive\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tloading={isSubmitting}\r\n\t\t\t\t\t\tcontent=\"Update profile\"\r\n\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\tdisabled={!isValid || !dirty}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileEditForm);\r\n","import React, { useState } from \"react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfileAbout = () => {\r\n\tconst { profileStore } = useStore();\r\n\tconst { isCurrentUser, profile } = profileStore;\r\n\tconst [editMode, setEditMode] = useState(false);\r\n\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width=\"16\">\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\tfloated=\"left\"\r\n\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\tcontent={`About ${profile?.displayName}`}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{isCurrentUser && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tcontent={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n\t\t\t\t\t\t\tonClick={() => setEditMode(!editMode)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width=\"16\">\r\n\t\t\t\t\t{editMode ? (\r\n\t\t\t\t\t\t<ProfileEditForm setEditMode={setEditMode} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileAbout);\r\n","import React from \"react\";\r\nimport { Cropper } from \"react-cropper\";\r\nimport \"cropperjs/dist/cropper.css\";\r\n\r\ninterface Props {\r\n\timagePreview: string;\r\n\tsetCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nconst PhotoWidgetCropper = ({ imagePreview, setCropper }: Props) => {\r\n\treturn (\r\n\t\t<Cropper\r\n\t\t\tsrc={imagePreview}\r\n\t\t\tstyle={{ height: 200, width: \"100%\" }}\r\n\t\t\tinitialAspectRatio={1}\r\n\t\t\taspectRatio={1}\r\n\t\t\tpreview=\".img-preview\"\r\n\t\t\tguides={false}\r\n\t\t\tviewMode={1}\r\n\t\t\tautoCropArea={1}\r\n\t\t\tbackground={false}\r\n\t\t\tonInitialized={(cropper) => setCropper(cropper)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { useCallback } from \"react\";\r\nimport { useDropzone } from \"react-dropzone\";\r\nimport { Header, Icon } from \"semantic-ui-react\";\r\n\r\ninterface Props {\r\n\tsetFiles: (files: any) => void;\r\n}\r\n\r\nconst PhotoWidgetDropzone = ({ setFiles }: Props) => {\r\n\tconst styles = {\r\n\t\tborder: \"dashed 3px #eee\",\r\n\t\tborderColor: \"#eee\",\r\n\t\tborderRadius: \"5px\",\r\n\t\tpaddingTop: \"30px\",\r\n\t\ttextAlign: \"center\" as 'center',\r\n\t\theight: 200,\r\n\t};\r\n\tconst activeStyle = {\r\n\t\tborderColor: \"green\",\r\n\t};\r\n\tconst onDrop = useCallback(\r\n\t\t(acceptedFiles) => {\r\n\t\t\tsetFiles(\r\n\t\t\t\tacceptedFiles.map((file: any) =>\r\n\t\t\t\t\tObject.assign(file, { preview: URL.createObjectURL(file) }),\r\n\t\t\t\t),\r\n\t\t\t);\r\n\t\t},\r\n\t\t[setFiles],\r\n\t);\r\n\tconst { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\t{...getRootProps()}\r\n\t\t\tstyle={isDragActive ? { ...styles, ...activeStyle } : styles}\r\n\t\t>\r\n\t\t\t<input {...getInputProps()} />\r\n            <Icon name=\"upload\" size=\"huge\" />\r\n            <Header content='Drop image here'/>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Grid, Header } from \"semantic-ui-react\";\r\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\r\nimport PhotoWidgetDropzone from \"./PhotoWidgetDropzone\";\r\n\r\ninterface Props {\r\n\tloading: boolean;\r\n\tuploadPhoto: (File: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget = ({ loading, uploadPhoto }: Props) => {\r\n\tconst [files, setFiles] = useState<any>([]);\r\n\tconst [cropper, setCropper] = useState<Cropper>();\r\n\r\n\tconst onCrop = () => {\r\n\t\tif (cropper) {\r\n\t\t\tcropper.getCroppedCanvas().toBlob((blob) => uploadPhoto(blob!));\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\treturn () => {\r\n\t\t\tfiles.forEach((file: any) => URL.revokeObjectURL(file.preview));\r\n\t\t};\r\n\t}, [files]);\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 1-Add Photo\" />\r\n\t\t\t\t<PhotoWidgetDropzone setFiles={setFiles} />\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={1} />\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 2-Resize Image\" />\r\n\t\t\t\t{files && files.length > 0 && (\r\n\t\t\t\t\t<PhotoWidgetCropper\r\n\t\t\t\t\t\tsetCropper={setCropper}\r\n\t\t\t\t\t\timagePreview={files[0].preview}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t\t<Grid.Column width={1} />\r\n\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t<Header sub color=\"teal\" content=\"Step 3-Preview & Upload\" />\r\n\t\t\t\t{files && files.length > 0 && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName=\"img-preview\"\r\n\t\t\t\t\t\t\tstyle={{ minHeight: 200, overflow: \"hidden\" }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button.Group widths={2}>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={onCrop}\r\n\t\t\t\t\t\t\t\tpositive\r\n\t\t\t\t\t\t\t\ticon=\"check\"\r\n\t\t\t\t\t\t\t\tloading={loading}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tonClick={() => setFiles([])}\r\n\t\t\t\t\t\t\t\tpositive\r\n\t\t\t\t\t\t\t\ticon=\"close\"\r\n\t\t\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default PhotoUploadWidget;\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent, useState } from \"react\";\r\nimport { Button, Card, Grid, Header, Image, Tab } from \"semantic-ui-react\";\r\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\r\nimport { Photo, Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nconst ProfilePhotos = ({ profile }: Props) => {\r\n\tconst {\r\n\t\tprofileStore: {\r\n\t\t\tisCurrentUser,\r\n\t\t\tuploadPhoto,\r\n\t\t\tuploading,\r\n\t\t\tloading,\r\n\t\t\tsetMainPhoto,\r\n\t\t\tdeletePhoto,\r\n\t\t},\r\n\t} = useStore();\r\n\tconst [addPhotoMode, setPhotoMode] = useState(false);\r\n\tconst [target, setTarget] = useState(\"\");\r\n\r\n\tconst hadnlePhotoUpload = (file: Blob) => {\r\n\t\tuploadPhoto(file).then(() => setPhotoMode(false));\r\n\t};\r\n\tconst handleMainPhoto = (\r\n\t\tphoto: Photo,\r\n\t\te: SyntheticEvent<HTMLButtonElement>,\r\n\t) => {\r\n\t\tsetTarget(e.currentTarget.name);\r\n\t\tsetMainPhoto(photo);\r\n\t};\r\n\tconst handleDeletePhoto = (\r\n\t\tphoto: Photo,\r\n\t\te: SyntheticEvent<HTMLButtonElement>,\r\n\t) => {\r\n\t\tsetTarget(e.currentTarget.name);\r\n\t\tdeletePhoto(photo);\r\n\t};\r\n\treturn (\r\n\t\t<Tab.Pane>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header icon=\"image\" content=\"Photos\" floated=\"left\" />\r\n\t\t\t\t\t{isCurrentUser && (\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tfloated=\"right\"\r\n\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\tcontent={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\r\n\t\t\t\t\t\t\tonClick={() => setPhotoMode(!addPhotoMode)}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t{addPhotoMode ? (\r\n\t\t\t\t\t\t<PhotoUploadWidget\r\n\t\t\t\t\t\t\tuploadPhoto={hadnlePhotoUpload}\r\n\t\t\t\t\t\t\tloading={uploading}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<Card.Group itemsPerRow={5}>\r\n\t\t\t\t\t\t\t{profile.photos?.map((photo) => (\r\n\t\t\t\t\t\t\t\t<Card key={photo.id}>\r\n\t\t\t\t\t\t\t\t\t<Image src={photo.url} />\r\n\t\t\t\t\t\t\t\t\t{isCurrentUser && (\r\n\t\t\t\t\t\t\t\t\t\t<Button.Group fluid widths={2}>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"green\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontent=\"Main\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={\"main\" + photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === \"main\" + photo.id && loading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleMainPhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\t\tbasic\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolor=\"red\"\r\n\t\t\t\t\t\t\t\t\t\t\t\ticon=\"trash\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tloading={target === photo.id && loading}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonClick={(e) => handleDeletePhoto(photo, e)}\r\n\t\t\t\t\t\t\t\t\t\t\t\tdisabled={photo.isMain}\r\n\t\t\t\t\t\t\t\t\t\t\t\tname={photo.id}\r\n\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t</Button.Group>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</Card.Group>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileCard from \"./ProfileCard\";\r\n\r\nconst ProfileFollowings = () => {\r\n\tconst { profileStore } = useStore();\r\n\tconst { profile, followings, loadingFollowings, activeTab } = profileStore;\r\n\r\n\treturn (\r\n\t\t<Tab.Pane loading={loadingFollowings}>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header\r\n\t\t\t\t\t\tfloated=\"left\"\r\n\t\t\t\t\t\ticon=\"user\"\r\n\t\t\t\t\t\tcontent={\r\n\t\t\t\t\t\t\tactiveTab === 3\r\n\t\t\t\t\t\t\t\t? `People following ${profile?.displayName}`\r\n\t\t\t\t\t\t\t\t: `People ${profile?.displayName} is following`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Card.Group itemsPerRow={4}>\r\n\t\t\t\t\t\t{followings.map((profile) => (\r\n\t\t\t\t\t\t\t<ProfileCard key={profile.userName} profile={profile} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Card.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileFollowings);\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\nconst panes = [\r\n\t{ menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n\t{ menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n\t{ menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\n\r\nconst ProfileActivities = () => {\r\n\tconst { profileStore } = useStore();\r\n\tconst { loadUserActivities, profile, loadingActivities, userActivities } =\r\n\t\tprofileStore;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadUserActivities(profile!.userName);\r\n\t}, [loadUserActivities, profile]);\r\n\r\n\tconst handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n\t\tloadUserActivities(\r\n\t\t\tprofile!.userName,\r\n\t\t\tpanes[data.activeIndex as number].pane.key,\r\n\t\t);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Tab.Pane loading={loadingActivities}>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={16}>\r\n\t\t\t\t\t<Tab\r\n\t\t\t\t\t\tpanes={panes}\r\n\t\t\t\t\t\tmenu={{ secondary: true, pointing: true }}\r\n\t\t\t\t\t\tonTabChange={(e, data) => handleTabChange(e, data)}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Card.Group itemsPerRow={4}>\r\n\t\t\t\t\t\t{userActivities.map((activity: UserActivity) => (\r\n\t\t\t\t\t\t\t<Card\r\n\t\t\t\t\t\t\t\tas={Link}\r\n\t\t\t\t\t\t\t\tto={`/activities/${activity.id}`}\r\n\t\t\t\t\t\t\t\tkey={activity.id}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Image\r\n\t\t\t\t\t\t\t\t\tsrc={`/assets/categoryImages/${activity.category}.jpg`}\r\n\t\t\t\t\t\t\t\t\tstyle={{ minHeight: 100, objectFit: \"cover\" }}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<Card.Content>\r\n\t\t\t\t\t\t\t\t\t<Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n\t\t\t\t\t\t\t\t\t<Card.Meta textAlign=\"center\">\r\n\t\t\t\t\t\t\t\t\t\t<div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n\t\t\t\t\t\t\t\t\t</Card.Meta>\r\n\t\t\t\t\t\t\t\t</Card.Content>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Card.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Tab.Pane>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileActivities);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport ProfileAbout from \"./ProfileAbout\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nconst ProfileContent = ({ profile }: Props) => {\r\n\tconst { profileStore } = useStore();\r\n\r\n\tconst panes = [\r\n\t\t{ menuItem: \"About\", render: () => <ProfileAbout /> },\r\n\t\t{ menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\r\n\t\t{ menuItem: \"Events\", render: () => <ProfileActivities /> },\r\n\t\t{ menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n\t\t{ menuItem: \"Following\", render: () => <ProfileFollowings /> },\r\n\t];\r\n\r\n\treturn (\r\n\t\t<Tab\r\n\t\t\tmenu={{ fluid: true, vertical: true }}\r\n\t\t\tmenuPosition=\"right\"\r\n\t\t\tpanes={panes}\r\n\t\t\tonTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileContent);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport {\r\n\tDivider,\r\n\tGrid,\r\n\tHeader,\r\n\tItem,\r\n\tSegment,\r\n\tStatistic,\r\n} from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport FollowButton from \"./FollowButton\";\r\n\r\ninterface Props {\r\n\tprofile: Profile;\r\n}\r\n\r\nconst ProfileHeader = ({ profile }: Props) => {\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Grid>\r\n\t\t\t\t<Grid.Column width={12}>\r\n\t\t\t\t\t<Item.Group>\r\n\t\t\t\t\t\t<Item>\r\n\t\t\t\t\t\t\t<Item.Image\r\n\t\t\t\t\t\t\t\tavatar\r\n\t\t\t\t\t\t\t\tsize=\"small\"\r\n\t\t\t\t\t\t\t\tsrc={profile.image || \"/assets/user.png\"}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Item.Content verticalAlign=\"middle\">\r\n\t\t\t\t\t\t\t\t<Header as=\"h1\" content={profile.displayName} />\r\n\t\t\t\t\t\t\t</Item.Content>\r\n\t\t\t\t\t\t</Item>\r\n\t\t\t\t\t</Item.Group>\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t\t<Grid.Column width={4}>\r\n\t\t\t\t\t<Statistic.Group widths={2}>\r\n\t\t\t\t\t\t<Statistic label=\"Followers\" value={profile.followersCount} />\r\n\t\t\t\t\t\t<Statistic label=\"Following\" value={profile.followingCount} />\r\n\t\t\t\t\t</Statistic.Group>\r\n\t\t\t\t\t<Divider />\r\n\t\t\t\t\t<FollowButton profile={profile} />\r\n\t\t\t\t</Grid.Column>\r\n\t\t\t</Grid>\r\n\t\t</Segment>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import { observer } from \"mobx-react-lite\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\n\r\nconst ProfilePage = () => {\r\n\tconst { username } = useParams<{ username: string }>();\r\n\tconst { profileStore } = useStore();\r\n\tconst { loadingProfile, loadProfile, profile, setActiveTab } = profileStore;\r\n\r\n\tuseEffect(() => {\r\n\t\tloadProfile(username);\r\n\t\treturn () => {\r\n\t\t\tsetActiveTab(0);\r\n\t\t};\r\n\t}, [loadProfile, username, setActiveTab]);\r\n\r\n\tif (loadingProfile) return <LoadingComponent content=\"Loading Profile...\" />;\r\n\treturn (\r\n\t\t<Grid>\r\n\t\t\t<Grid.Column width={12}>\r\n\t\t\t\t{profile && (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<ProfileHeader profile={profile} />\r\n\t\t\t\t\t\t<ProfileContent profile={profile} />\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</Grid.Column>\r\n\t\t</Grid>\r\n\t);\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React from \"react\";\r\nimport { Redirect, Route, RouteComponentProps, RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n\tcomponent:\r\n\t\t| React.ComponentType<RouteComponentProps<any>>\r\n\t\t| React.ComponentType<any>;\r\n}\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }: Props) => {\r\n\tconst {\r\n\t\tuserStore: { isLoggedIn },\r\n\t} = useStore();\r\n\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\trender={(props) =>\r\n\t\t\t\tisLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n\t\t\t}\r\n\t\t/>\r\n\t);\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router-dom\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App = () => {\n\tconst location = useLocation();\n\tconst { commonStore, userStore } = useStore();\n\n\tuseEffect(() => {\n\t\tif (commonStore.token) {\n\t\t\tuserStore.getUser().finally(() => commonStore.setUploaded());\n\t\t} else {\n\t\t\tcommonStore.setUploaded();\n\t\t}\n\t}, [commonStore, userStore]);\n\n\tif (!commonStore.uploaded)\n\t\treturn <LoadingComponent content=\"Setting things up\" />;\n\n\treturn (\n\t\t<>\n\t\t\t<ToastContainer position=\"bottom-right\" hideProgressBar />\n\t\t\t<ModalContainer />\n\t\t\t<Route exact path=\"/\" component={HomePage} />\n\t\t\t<Route\n\t\t\t\tpath={\"/(.+)\"}\n\t\t\t\trender={() => (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<NavBar />\n\t\t\t\t\t\t<Container style={{ marginTop: \"7em\" }}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t\tpath=\"/activities\"\n\t\t\t\t\t\t\t\t\tcomponent={ActivityDashboard}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\t\tpath=\"/activities/:id\"\n\t\t\t\t\t\t\t\t\tcomponent={ActivityDetails}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\t\tkey={location.key}\n\t\t\t\t\t\t\t\t\tpath={[\"/createActivity\", \"/manage/:id\"]}\n\t\t\t\t\t\t\t\t\tcomponent={ActivityForm}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<PrivateRoute\n\t\t\t\t\t\t\t\t\tpath=\"/profiles/:username\"\n\t\t\t\t\t\t\t\t\tcomponent={ProfilePage}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<PrivateRoute path=\"/errors\" component={TestErrors} />\n\t\t\t\t\t\t\t\t<Route path=\"/server-error\" component={ServerError} />\n\t\t\t\t\t\t\t\t<Route component={NotFound} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Container>\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t/>\n\t\t</>\n\t);\n};\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = () => {\r\n\tconst { pathname } = useLocation();\r\n\tuseEffect(() => {\r\n\t\twindow.scrollTo(0, 0);\r\n\t}, [pathname]);\r\n\treturn null;\r\n};\r\n\r\nexport default ScrollToTop;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n\t<StoreContext.Provider value={store}>\n\t\t<Router history={history}>\n\t\t\t<ScrollToTop/>\n\t\t\t<App />\n\t\t</Router>\n\t</StoreContext.Provider>,\n\tdocument.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}